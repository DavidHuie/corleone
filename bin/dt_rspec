#!/usr/bin/env ruby

require 'docker_test'
require 'docker_test/collector/rspec'
require 'docker_test/emitter/rspec'

# DockerTest.logger.level = Logger::INFO

SERVER_URI = 'druby://0.0.0.0:7000'

config_file = ARGV.shift

# parse config file
config = DockerTest::Config.new(DockerTest.logger)
config.instance_eval(File.read(config_file), config_file)

# start server
collector = DockerTest::Collector::RSpec.new
emitter = DockerTest::Emitter::RSpec.new(ARGV)
server = DockerTest::Server.new(emitter, collector, SERVER_URI)
server.config_file = config_file
server.start

# pull all image repositories
config.image.pull_all

# launch containers
images = []
config.settings.num_containers.times do
  im = config.image.clone
  images << im
  im.create_linked_containers
  im.create_container
end

# run loop
begin
  loop { server.alive? ? sleep(1) : break }
  server.summarize
ensure
  images.each { |i| i.kill_all }
end
